{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e36a315e-5ec3-48ac-819c-0c0a03a2b818",
   "metadata": {},
   "outputs": [],
   "source": [
    "# ===================== 第二部分：数据可视化 =====================\n",
    "from pyspark.sql.functions import date_format, sum as spark_sum\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "\n",
    "# 1. 设置中文字体\n",
    "try:\n",
    "    # 安装中文字体\n",
    "    !apt-get install -y fonts-wqy-zenhei\n",
    "    !fc-cache -fv\n",
    "    plt.rcParams['font.sans-serif'] = ['WenQuanYi Zen Hei', 'SimHei', 'Microsoft YaHei']\n",
    "    plt.rcParams['axes.unicode_minus'] = False\n",
    "except:\n",
    "    plt.rcParams['font.sans-serif'] = ['SimHei', 'Microsoft YaHei', 'WenQuanYi Micro Hei']\n",
    "    plt.rcParams['axes.unicode_minus'] = False\n",
    "\n",
    "# 2. 准备可视化数据\n",
    "city_sales = clean_df.groupBy(\"收货城市\").agg(spark_sum(\"订单总额\").alias(\"total_sales\")) \\\n",
    "    .orderBy(\"total_sales\", ascending=False).limit(10).toPandas()\n",
    "\n",
    "member_sales = clean_df.groupBy(\"是否会员\").agg(\n",
    "    spark_sum(\"订单总额\").alias(\"total_sales\")\n",
    ").toPandas()\n",
    "member_sales['是否会员'] = member_sales['是否会员'].map({True: '会员', False: '非会员'})\n",
    "\n",
    "product_sales = clean_df.groupBy(\"商品名称\").agg(\n",
    "    spark_sum(\"购买数量\").alias(\"total_quantity\")\n",
    ").orderBy(\"total_quantity\", ascending=False).limit(10).toPandas()\n",
    "\n",
    "price_dist = clean_df.select(\"单价\").toPandas()\n",
    "\n",
    "age_sales = clean_df.groupBy(\"年龄\").agg(\n",
    "    spark_sum(\"订单总额\").alias(\"total_sales\")\n",
    ").toPandas()\n",
    "\n",
    "monthly_sales = clean_df.withColumn(\"month\", date_format(\"下单时间\", \"yyyy-MM\")) \\\n",
    "    .groupBy(\"month\").agg(spark_sum(\"订单总额\").alias(\"monthly_sales\")) \\\n",
    "    .orderBy(\"month\").toPandas()\n",
    "\n",
    "# 3. 创建静态图表\n",
    "plt.figure(figsize=(14, 18))\n",
    "\n",
    "# 城市销售额TOP10\n",
    "plt.subplot(3, 2, 1)\n",
    "sns.barplot(x='total_sales', y='收货城市', data=city_sales, palette='viridis')\n",
    "plt.title('城市销售额TOP10')\n",
    "plt.xlabel('销售额')\n",
    "\n",
    "# 会员消费占比\n",
    "plt.subplot(3, 2, 2)\n",
    "plt.pie(member_sales['total_sales'], labels=member_sales['是否会员'], \n",
    "        autopct='%1.1f%%', colors=['#ff9999','#66b3ff'])\n",
    "plt.title('会员消费占比')\n",
    "\n",
    "# 热销商品TOP10\n",
    "plt.subplot(3, 2, 3)\n",
    "sns.barplot(x='total_quantity', y='商品名称', data=product_sales, palette='rocket')\n",
    "plt.title('热销商品TOP10(按销量)')\n",
    "plt.xlabel('销量')\n",
    "\n",
    "# 价格分布\n",
    "plt.subplot(3, 2, 4)\n",
    "sns.histplot(price_dist['单价'], bins=30, kde=True, color='skyblue')\n",
    "plt.title('商品价格分布')\n",
    "plt.xlabel('价格')\n",
    "\n",
    "# 年龄与消费关系\n",
    "plt.subplot(3, 2, 5)\n",
    "sns.regplot(x='年龄', y='total_sales', data=age_sales, scatter_kws={'alpha':0.5})\n",
    "plt.title('年龄与消费总额关系')\n",
    "plt.xlabel('年龄')\n",
    "plt.ylabel('消费总额')\n",
    "\n",
    "# 月度销售趋势\n",
    "plt.subplot(3, 2, 6)\n",
    "sns.lineplot(x='month', y='monthly_sales', data=monthly_sales, marker='o')\n",
    "plt.title('月度销售趋势')\n",
    "plt.xlabel('月份')\n",
    "plt.ylabel('销售额')\n",
    "plt.xticks(rotation=45)\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.savefig('/data/full_analysis.png', dpi=300, bbox_inches='tight')\n",
    "plt.show()\n",
    "print(\"静态图表已保存: /data/full_analysis.png\")\n",
    "\n",
    "# ===================== 第三部分：交互式报告与文本报告 =====================\n",
    "# 1. 安装依赖\n",
    "!pip install plotly kaleido -q\n",
    "import plotly.express as px\n",
    "from plotly.subplots import make_subplots\n",
    "import plotly.graph_objects as go\n",
    "\n",
    "# 2. 数据类型转换\n",
    "def safe_convert(obj):\n",
    "    if isinstance(obj, (np.int32, np.int64)):\n",
    "        return int(obj)\n",
    "    if isinstance(obj, (np.float32, np.float64)):\n",
    "        return float(obj)\n",
    "    return obj\n",
    "\n",
    "city_sales = city_sales.applymap(safe_convert)\n",
    "member_sales = member_sales.applymap(safe_convert)\n",
    "product_sales = product_sales.applymap(safe_convert)\n",
    "price_dist = price_dist.applymap(safe_convert)\n",
    "age_sales = age_sales.applymap(safe_convert)\n",
    "monthly_sales = monthly_sales.applymap(safe_convert)\n",
    "\n",
    "# 3. 创建交互式仪表板\n",
    "fig = make_subplots(\n",
    "    rows=3, \n",
    "    cols=2, \n",
    "    specs=[\n",
    "        [{\"type\": \"bar\"}, {\"type\": \"pie\"}],\n",
    "        [{\"type\": \"bar\"}, {\"type\": \"histogram\"}],\n",
    "        [{\"type\": \"scatter\"}, {\"type\": \"scatter\"}]\n",
    "    ],\n",
    "    subplot_titles=(\n",
    "        \"城市销售额TOP10\", \"会员消费占比\", \n",
    "        \"热销商品TOP10\", \"商品价格分布\",\n",
    "        \"年龄与消费关系\", \"月度销售趋势\"\n",
    "    )\n",
    ")\n",
    "\n",
    "# 添加图表\n",
    "fig.add_trace(go.Bar(y=city_sales['收货城市'].tolist(), x=city_sales['total_sales'].tolist(), \n",
    "                    orientation='h', marker_color='#636efa'), row=1, col=1)\n",
    "fig.add_trace(go.Pie(labels=member_sales['是否会员'].tolist(), values=member_sales['total_sales'].tolist(), \n",
    "                    hole=0.3), row=1, col=2)\n",
    "fig.add_trace(go.Bar(y=product_sales['商品名称'].tolist(), x=product_sales['total_quantity'].tolist(), \n",
    "                    orientation='h', marker_color='#ef553b'), row=2, col=1)\n",
    "fig.add_trace(go.Histogram(x=price_dist['单价'].tolist(), nbinsx=30, \n",
    "                    marker_color='#00cc96'), row=2, col=2)\n",
    "fig.add_trace(go.Scatter(x=age_sales['年龄'].tolist(), y=age_sales['total_sales'].tolist(), \n",
    "                    mode='markers', marker=dict(size=8, color='#ab63fa', opacity=0.7)), row=3, col=1)\n",
    "fig.add_trace(go.Scatter(x=monthly_sales['month'].tolist(), y=monthly_sales['monthly_sales'].tolist(), \n",
    "                    mode='lines+markers', line=dict(color='#ffa15a', width=2)), row=3, col=2)\n",
    "\n",
    "# 更新布局并保存\n",
    "fig.update_layout(height=1200, width=1400, title_text='阿迪达斯销售分析仪表板')\n",
    "fig.write_html(\"/data/interactive_dashboard.html\")\n",
    "print(\"交互式仪表板已保存: /data/interactive_dashboard.html\")\n",
    "\n",
    "# 4. 生成文本报告\n",
    "top_city = city_sales.iloc[0]['收货城市']\n",
    "top_product = product_sales.iloc[0]['商品名称']\n",
    "top_age = age_sales.loc[age_sales['total_sales'].idxmax()]['年龄']\n",
    "top_month = monthly_sales.iloc[-1]['month']\n",
    "\n",
    "report = f\"\"\"\n",
    "# 阿迪达斯销售分析报告\n",
    "\n",
    "## 关键指标\n",
    "- 总销售额: ¥{total_sales:,.2f}\n",
    "- 平均订单额: ¥{avg_order_value:,.2f}\n",
    "- 会员占比: {member_ratio:.1f}%\n",
    "- 模型准确率: RMSE={rmse:.2f}\n",
    "\n",
    "## 核心发现\n",
    "1. **最佳销售城市**: {top_city}\n",
    "2. **最热销商品**: {top_product}\n",
    "3. **消费主力年龄**: {top_age}岁\n",
    "4. **销售高峰月份**: {top_month}\n",
    "\n",
    "## 分析图表\n",
    "![综合分析](/data/full_analysis.png)\n",
    "\n",
    "## 交互式报告\n",
    "[点击查看交互式仪表板](/data/interactive_dashboard.html)\n",
    "\"\"\"\n",
    "\n",
    "with open(\"/data/sales_analysis_report.md\", \"w\", encoding=\"utf-8\") as f:\n",
    "    f.write(report)\n",
    "    \n",
    "print(\"文本报告已保存: /data/sales_analysis_report.md\")\n",
    "print(\"所有分析结果已保存在/data目录\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
